//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/Development/Projects/antlr/CodeSharper-grammars/src/CodeQuery/v1_1\CodeQueryLexer.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
public partial class CodeQueryLexer : Lexer {
	public const int
		STRING=1, LEFT_BRACKET=2, RIGHT_BRACKET=3, LEFT_SQUARE_BRACKET=4, RIGHT_SQUARE_BRACKET=5, 
		NUMBER=6, BOOLEAN=7, ID=8, SELECTOR_OPERATOR=9, DOT=10, COLON=11, COMMA=12, 
		METHOD_CALL_SYMBOL=13, ASSIGNMENT_OPERATOR=14, PIPELINE_OPERATOR=15, WHITESPACE=16;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"STRING", "LEFT_BRACKET", "RIGHT_BRACKET", "LEFT_SQUARE_BRACKET", "RIGHT_SQUARE_BRACKET", 
		"NUMBER", "BOOLEAN", "ID", "SELECTOR_OPERATOR", "DOT", "COLON", "COMMA", 
		"METHOD_CALL_SYMBOL", "ASSIGNMENT_OPERATOR", "PIPELINE_OPERATOR", "ID_SYMBOL", 
		"CHARACTER", "WHITESPACE"
	};


	public CodeQueryLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'('", "')'", "'['", "']'", null, null, null, null, "'.'", 
		"':'", "','", "'@'", "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "STRING", "LEFT_BRACKET", "RIGHT_BRACKET", "LEFT_SQUARE_BRACKET", 
		"RIGHT_SQUARE_BRACKET", "NUMBER", "BOOLEAN", "ID", "SELECTOR_OPERATOR", 
		"DOT", "COLON", "COMMA", "METHOD_CALL_SYMBOL", "ASSIGNMENT_OPERATOR", 
		"PIPELINE_OPERATOR", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CodeQueryLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x12{\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x3\x2\x3\x2\a\x2*\n\x2\f"+
		"\x2\xE\x2-\v\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6"+
		"\x3\x6\x3\a\x6\a:\n\a\r\a\xE\a;\x3\a\x3\a\x6\a@\n\a\r\a\xE\a\x41\x5\a"+
		"\x44\n\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x5\bO\n\b\x3\t\x3"+
		"\t\x5\tS\n\t\x3\t\x3\t\x3\t\a\tX\n\t\f\t\xE\t[\v\t\x3\n\x3\n\x3\v\x3\v"+
		"\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x5\x10o\n\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x6\x13"+
		"v\n\x13\r\x13\xE\x13w\x3\x13\x3\x13\x3+\x2\x14\x3\x3\x5\x4\a\x5\t\x6\v"+
		"\a\r\b\xF\t\x11\n\x13\v\x15\f\x17\r\x19\xE\x1B\xF\x1D\x10\x1F\x11!\x2"+
		"#\x2%\x12\x3\x2\a\x3\x2\x32;\x4\x2--@@\x5\x2&&//\x61\x61\x4\x2\x43\\\x63"+
		"|\x5\x2\v\f\xF\xF\"\"\x85\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3"+
		"\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3"+
		"\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2"+
		"\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2"+
		"\x2\x2\x1F\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x3\'\x3\x2\x2\x2\x5\x30\x3\x2\x2"+
		"\x2\a\x32\x3\x2\x2\x2\t\x34\x3\x2\x2\x2\v\x36\x3\x2\x2\x2\r\x39\x3\x2"+
		"\x2\x2\xFN\x3\x2\x2\x2\x11R\x3\x2\x2\x2\x13\\\x3\x2\x2\x2\x15^\x3\x2\x2"+
		"\x2\x17`\x3\x2\x2\x2\x19\x62\x3\x2\x2\x2\x1B\x64\x3\x2\x2\x2\x1D\x66\x3"+
		"\x2\x2\x2\x1Fn\x3\x2\x2\x2!p\x3\x2\x2\x2#r\x3\x2\x2\x2%u\x3\x2\x2\x2\'"+
		"+\a$\x2\x2(*\v\x2\x2\x2)(\x3\x2\x2\x2*-\x3\x2\x2\x2+,\x3\x2\x2\x2+)\x3"+
		"\x2\x2\x2,.\x3\x2\x2\x2-+\x3\x2\x2\x2./\a$\x2\x2/\x4\x3\x2\x2\x2\x30\x31"+
		"\a*\x2\x2\x31\x6\x3\x2\x2\x2\x32\x33\a+\x2\x2\x33\b\x3\x2\x2\x2\x34\x35"+
		"\a]\x2\x2\x35\n\x3\x2\x2\x2\x36\x37\a_\x2\x2\x37\f\x3\x2\x2\x2\x38:\t"+
		"\x2\x2\x2\x39\x38\x3\x2\x2\x2:;\x3\x2\x2\x2;\x39\x3\x2\x2\x2;<\x3\x2\x2"+
		"\x2<\x43\x3\x2\x2\x2=?\a\x30\x2\x2>@\t\x2\x2\x2?>\x3\x2\x2\x2@\x41\x3"+
		"\x2\x2\x2\x41?\x3\x2\x2\x2\x41\x42\x3\x2\x2\x2\x42\x44\x3\x2\x2\x2\x43"+
		"=\x3\x2\x2\x2\x43\x44\x3\x2\x2\x2\x44\xE\x3\x2\x2\x2\x45\x46\ah\x2\x2"+
		"\x46G\a\x63\x2\x2GH\an\x2\x2HI\au\x2\x2IO\ag\x2\x2JK\av\x2\x2KL\at\x2"+
		"\x2LM\aw\x2\x2MO\ag\x2\x2N\x45\x3\x2\x2\x2NJ\x3\x2\x2\x2O\x10\x3\x2\x2"+
		"\x2PS\x5#\x12\x2QS\x5!\x11\x2RP\x3\x2\x2\x2RQ\x3\x2\x2\x2SY\x3\x2\x2\x2"+
		"TX\x5#\x12\x2UX\x5\r\a\x2VX\x5!\x11\x2WT\x3\x2\x2\x2WU\x3\x2\x2\x2WV\x3"+
		"\x2\x2\x2X[\x3\x2\x2\x2YW\x3\x2\x2\x2YZ\x3\x2\x2\x2Z\x12\x3\x2\x2\x2["+
		"Y\x3\x2\x2\x2\\]\t\x3\x2\x2]\x14\x3\x2\x2\x2^_\a\x30\x2\x2_\x16\x3\x2"+
		"\x2\x2`\x61\a<\x2\x2\x61\x18\x3\x2\x2\x2\x62\x63\a.\x2\x2\x63\x1A\x3\x2"+
		"\x2\x2\x64\x65\a\x42\x2\x2\x65\x1C\x3\x2\x2\x2\x66g\a?\x2\x2g\x1E\x3\x2"+
		"\x2\x2ho\a~\x2\x2ij\a(\x2\x2jo\a(\x2\x2ko\a=\x2\x2lm\a~\x2\x2mo\a~\x2"+
		"\x2nh\x3\x2\x2\x2ni\x3\x2\x2\x2nk\x3\x2\x2\x2nl\x3\x2\x2\x2o \x3\x2\x2"+
		"\x2pq\t\x4\x2\x2q\"\x3\x2\x2\x2rs\t\x5\x2\x2s$\x3\x2\x2\x2tv\t\x6\x2\x2"+
		"ut\x3\x2\x2\x2vw\x3\x2\x2\x2wu\x3\x2\x2\x2wx\x3\x2\x2\x2xy\x3\x2\x2\x2"+
		"yz\b\x13\x2\x2z&\x3\x2\x2\x2\r\x2+;\x41\x43NRWYnw\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
