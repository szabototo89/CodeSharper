//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/Development/Projects/antlr/CodeSharper-grammars/src/CodeQuery/v2\CodeQuery.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

namespace CodeSharper.Interpreter.Grammar
{
    /// <summary>
    /// This class provides an empty implementation of <see cref="ICodeQueryListener"/>,
    /// which can be extended to create a listener which only needs to handle a subset
    /// of the available methods.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
    [System.CLSCompliant(false)]
    public partial class CodeQueryBaseListener : ICodeQueryListener {
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.CommandOperand"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterCommandOperand([NotNull] CodeQueryParser.CommandOperandContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.CommandOperand"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitCommandOperand([NotNull] CodeQueryParser.CommandOperandContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.CommandInner"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterCommandInner([NotNull] CodeQueryParser.CommandInnerContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.CommandInner"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitCommandInner([NotNull] CodeQueryParser.CommandInnerContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.CommandExpression"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterCommandExpression([NotNull] CodeQueryParser.CommandExpressionContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.CommandExpression"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitCommandExpression([NotNull] CodeQueryParser.CommandExpressionContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.ExpressionMethodCall"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterExpressionMethodCall([NotNull] CodeQueryParser.ExpressionMethodCallContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.ExpressionMethodCall"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitExpressionMethodCall([NotNull] CodeQueryParser.ExpressionMethodCallContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.ExpressionSelector"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterExpressionSelector([NotNull] CodeQueryParser.ExpressionSelectorContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.ExpressionSelector"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitExpressionSelector([NotNull] CodeQueryParser.ExpressionSelectorContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.methodCall"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterMethodCall([NotNull] CodeQueryParser.MethodCallContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.methodCall"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitMethodCall([NotNull] CodeQueryParser.MethodCallContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.MethodCallParameterValueWithExpression"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterMethodCallParameterValueWithExpression([NotNull] CodeQueryParser.MethodCallParameterValueWithExpressionContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.MethodCallParameterValueWithExpression"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitMethodCallParameterValueWithExpression([NotNull] CodeQueryParser.MethodCallParameterValueWithExpressionContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.MethodCallParameterValueWithConstant"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterMethodCallParameterValueWithConstant([NotNull] CodeQueryParser.MethodCallParameterValueWithConstantContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.MethodCallParameterValueWithConstant"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitMethodCallParameterValueWithConstant([NotNull] CodeQueryParser.MethodCallParameterValueWithConstantContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.MethodCallParameterValueWithIdentifier"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterMethodCallParameterValueWithIdentifier([NotNull] CodeQueryParser.MethodCallParameterValueWithIdentifierContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.MethodCallParameterValueWithIdentifier"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitMethodCallParameterValueWithIdentifier([NotNull] CodeQueryParser.MethodCallParameterValueWithIdentifierContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.UnarySelection"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterUnarySelection([NotNull] CodeQueryParser.UnarySelectionContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.UnarySelection"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitUnarySelection([NotNull] CodeQueryParser.UnarySelectionContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.BinarySelection"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterBinarySelection([NotNull] CodeQueryParser.BinarySelectionContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.BinarySelection"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitBinarySelection([NotNull] CodeQueryParser.BinarySelectionContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.SelectionWithParenthesis"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterSelectionWithParenthesis([NotNull] CodeQueryParser.SelectionWithParenthesisContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.SelectionWithParenthesis"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitSelectionWithParenthesis([NotNull] CodeQueryParser.SelectionWithParenthesisContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.selectableElement"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterSelectableElement([NotNull] CodeQueryParser.SelectableElementContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.selectableElement"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitSelectableElement([NotNull] CodeQueryParser.SelectableElementContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.className"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterClassName([NotNull] CodeQueryParser.ClassNameContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.className"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitClassName([NotNull] CodeQueryParser.ClassNameContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.PseudoSelectorSimple"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterPseudoSelectorSimple([NotNull] CodeQueryParser.PseudoSelectorSimpleContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.PseudoSelectorSimple"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitPseudoSelectorSimple([NotNull] CodeQueryParser.PseudoSelectorSimpleContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.PseudoSelectorWithConstant"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterPseudoSelectorWithConstant([NotNull] CodeQueryParser.PseudoSelectorWithConstantContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.PseudoSelectorWithConstant"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitPseudoSelectorWithConstant([NotNull] CodeQueryParser.PseudoSelectorWithConstantContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.PseudoSelectorWithIdentifier"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterPseudoSelectorWithIdentifier([NotNull] CodeQueryParser.PseudoSelectorWithIdentifierContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.PseudoSelectorWithIdentifier"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitPseudoSelectorWithIdentifier([NotNull] CodeQueryParser.PseudoSelectorWithIdentifierContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.PseudoSelectorWithSelector"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterPseudoSelectorWithSelector([NotNull] CodeQueryParser.PseudoSelectorWithSelectorContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.PseudoSelectorWithSelector"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitPseudoSelectorWithSelector([NotNull] CodeQueryParser.PseudoSelectorWithSelectorContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.selectorAttribute"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterSelectorAttribute([NotNull] CodeQueryParser.SelectorAttributeContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.selectorAttribute"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitSelectorAttribute([NotNull] CodeQueryParser.SelectorAttributeContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.ConstantString"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterConstantString([NotNull] CodeQueryParser.ConstantStringContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.ConstantString"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitConstantString([NotNull] CodeQueryParser.ConstantStringContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.ConstantNumber"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterConstantNumber([NotNull] CodeQueryParser.ConstantNumberContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.ConstantNumber"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitConstantNumber([NotNull] CodeQueryParser.ConstantNumberContext context) { }
        /// <summary>
        /// Enter a parse tree produced by <see cref="CodeQueryParser.ConstantBoolean"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void EnterConstantBoolean([NotNull] CodeQueryParser.ConstantBooleanContext context) { }
        /// <summary>
        /// Exit a parse tree produced by <see cref="CodeQueryParser.ConstantBoolean"/>.
        /// <para>The default implementation does nothing.</para>
        /// </summary>
        /// <param name="context">The parse tree.</param>
        public virtual void ExitConstantBoolean([NotNull] CodeQueryParser.ConstantBooleanContext context) { }

        /// <inheritdoc/>
        /// <remarks>The default implementation does nothing.</remarks>
        public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
        /// <inheritdoc/>
        /// <remarks>The default implementation does nothing.</remarks>
        public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
        /// <inheritdoc/>
        /// <remarks>The default implementation does nothing.</remarks>
        public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
        /// <inheritdoc/>
        /// <remarks>The default implementation does nothing.</remarks>
        public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
    }
}
