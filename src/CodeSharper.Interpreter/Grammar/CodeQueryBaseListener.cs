//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/Development/Projects/antlr/CodeSharper-grammars/src/CodeQuery/v1_1\CodeQuery.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICodeQueryListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
public partial class CodeQueryBaseListener : ICodeQueryListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.CommandOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommandOperand([NotNull] CodeQuery.CommandOperandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.CommandOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommandOperand([NotNull] CodeQuery.CommandOperandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.CommandInner"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommandInner([NotNull] CodeQuery.CommandInnerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.CommandInner"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommandInner([NotNull] CodeQuery.CommandInnerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.CommandExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommandExpression([NotNull] CodeQuery.CommandExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.CommandExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommandExpression([NotNull] CodeQuery.CommandExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.ExpressionMethodCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionMethodCall([NotNull] CodeQuery.ExpressionMethodCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.ExpressionMethodCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionMethodCall([NotNull] CodeQuery.ExpressionMethodCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.ExpressionSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionSelector([NotNull] CodeQuery.ExpressionSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.ExpressionSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionSelector([NotNull] CodeQuery.ExpressionSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.ExpressionInner"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionInner([NotNull] CodeQuery.ExpressionInnerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.ExpressionInner"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionInner([NotNull] CodeQuery.ExpressionInnerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.methodCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodCall([NotNull] CodeQuery.MethodCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.methodCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodCall([NotNull] CodeQuery.MethodCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.MethodCallParameterValueWithExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodCallParameterValueWithExpression([NotNull] CodeQuery.MethodCallParameterValueWithExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.MethodCallParameterValueWithExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodCallParameterValueWithExpression([NotNull] CodeQuery.MethodCallParameterValueWithExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.MethodCallParameterValueWithConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodCallParameterValueWithConstant([NotNull] CodeQuery.MethodCallParameterValueWithConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.MethodCallParameterValueWithConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodCallParameterValueWithConstant([NotNull] CodeQuery.MethodCallParameterValueWithConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.MethodCallParameterValueWithIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodCallParameterValueWithIdentifier([NotNull] CodeQuery.MethodCallParameterValueWithIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.MethodCallParameterValueWithIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodCallParameterValueWithIdentifier([NotNull] CodeQuery.MethodCallParameterValueWithIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.UnarySelection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnarySelection([NotNull] CodeQuery.UnarySelectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.UnarySelection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnarySelection([NotNull] CodeQuery.UnarySelectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.BinarySelection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinarySelection([NotNull] CodeQuery.BinarySelectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.BinarySelection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinarySelection([NotNull] CodeQuery.BinarySelectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.SelectionWithParenthesis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectionWithParenthesis([NotNull] CodeQuery.SelectionWithParenthesisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.SelectionWithParenthesis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectionWithParenthesis([NotNull] CodeQuery.SelectionWithParenthesisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.selectableElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectableElement([NotNull] CodeQuery.SelectableElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.selectableElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectableElement([NotNull] CodeQuery.SelectableElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.PseudoSelectorWithConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPseudoSelectorWithConstant([NotNull] CodeQuery.PseudoSelectorWithConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.PseudoSelectorWithConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPseudoSelectorWithConstant([NotNull] CodeQuery.PseudoSelectorWithConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.PseudoSelectorWithIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPseudoSelectorWithIdentifier([NotNull] CodeQuery.PseudoSelectorWithIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.PseudoSelectorWithIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPseudoSelectorWithIdentifier([NotNull] CodeQuery.PseudoSelectorWithIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.PseudoSelectorWithSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPseudoSelectorWithSelector([NotNull] CodeQuery.PseudoSelectorWithSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.PseudoSelectorWithSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPseudoSelectorWithSelector([NotNull] CodeQuery.PseudoSelectorWithSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.selectorAttribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectorAttribute([NotNull] CodeQuery.SelectorAttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.selectorAttribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectorAttribute([NotNull] CodeQuery.SelectorAttributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.ConstantString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantString([NotNull] CodeQuery.ConstantStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.ConstantString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantString([NotNull] CodeQuery.ConstantStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.ConstantNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantNumber([NotNull] CodeQuery.ConstantNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.ConstantNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantNumber([NotNull] CodeQuery.ConstantNumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeQuery.ConstantBoolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantBoolean([NotNull] CodeQuery.ConstantBooleanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeQuery.ConstantBoolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantBoolean([NotNull] CodeQuery.ConstantBooleanContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
