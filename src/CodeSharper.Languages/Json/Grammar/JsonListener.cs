//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/Development/Projects/antlr/CodeSharper-grammars/src/JSON/v1\Json.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="JsonParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
public interface IJsonListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] JsonParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] JsonParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] JsonParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] JsonParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonParser.objectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectLiteral([NotNull] JsonParser.ObjectLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonParser.objectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectLiteral([NotNull] JsonParser.ObjectLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayLiteral([NotNull] JsonParser.ArrayLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayLiteral([NotNull] JsonParser.ArrayLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonParser.keyValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyValuePair([NotNull] JsonParser.KeyValuePairContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonParser.keyValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyValuePair([NotNull] JsonParser.KeyValuePairContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IdentifierKey</c>
	/// labeled alternative in <see cref="JsonParser.key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierKey([NotNull] JsonParser.IdentifierKeyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IdentifierKey</c>
	/// labeled alternative in <see cref="JsonParser.key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierKey([NotNull] JsonParser.IdentifierKeyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StringKey</c>
	/// labeled alternative in <see cref="JsonParser.key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringKey([NotNull] JsonParser.StringKeyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StringKey</c>
	/// labeled alternative in <see cref="JsonParser.key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringKey([NotNull] JsonParser.StringKeyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ConstantValue</c>
	/// labeled alternative in <see cref="JsonParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantValue([NotNull] JsonParser.ConstantValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstantValue</c>
	/// labeled alternative in <see cref="JsonParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantValue([NotNull] JsonParser.ConstantValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralValue</c>
	/// labeled alternative in <see cref="JsonParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralValue([NotNull] JsonParser.LiteralValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralValue</c>
	/// labeled alternative in <see cref="JsonParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralValue([NotNull] JsonParser.LiteralValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BooleanConstant</c>
	/// labeled alternative in <see cref="JsonParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanConstant([NotNull] JsonParser.BooleanConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BooleanConstant</c>
	/// labeled alternative in <see cref="JsonParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanConstant([NotNull] JsonParser.BooleanConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NumberConstant</c>
	/// labeled alternative in <see cref="JsonParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberConstant([NotNull] JsonParser.NumberConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumberConstant</c>
	/// labeled alternative in <see cref="JsonParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberConstant([NotNull] JsonParser.NumberConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StringConstant</c>
	/// labeled alternative in <see cref="JsonParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringConstant([NotNull] JsonParser.StringConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StringConstant</c>
	/// labeled alternative in <see cref="JsonParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringConstant([NotNull] JsonParser.StringConstantContext context);
}
